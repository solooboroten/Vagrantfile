- hosts: all
  become: true

  vars:
    ferm_enabled: true
    nginx_flavor: 'nginx.org'
    nginx_server_welcome:
      name: [ 'welcome' ]
      enabled: false
      delete: true

    nginx_server_localhost:
      name: [ 'localhost', '127.0.0.1', '[::1]' ]
      enabled: false
      delete: true

    nginx_ferm_dependent_rules:
    - type: 'accept'
      dport: '{{ owncloud_dport }}'
      saddr: '{{ nginx_allow + nginx_group_allow + nginx_host_allow }}'
      accept_any: True
      weight: '40'
      role: 'nginx'
      name: 'http_https'

    multiport: True
    owncloud_database: 'postgresql'
    owncloud_ldap_enable: false
    owncloud_base_packages:
    - 'owncloud'

  roles:
    - role: etckeeper-commit
      etckeeper_commit_message: 'Pre roles etckeeper commit'

    - role: debops.core
      tags: [ 'role::core' ]

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.core etckeeper commit'

    - role: debops.apt_preferences
      tags: [ 'role::apt_preferences' ]
      apt_preferences_dependent_list:
        - '{{ nginx_apt_preferences_dependent_list }}'
        - '{{ postgresql_server_apt_preferences_dependent_list }}'

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.apt_preferences etckeeper commit'

    - role: debops.sshd
      tags: [ 'role::sshd' ]
      sshd__allow_groups: [ 'root', 'admins', 'sshusers', 'sftponly', 'vagrant' ]

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.sshd etckeeper commit'

    - role: debops.ferm
      tags: [ 'role::ferm' ]
      ferm_dependent_rules:
        - '{{ sshd__ferm__dependent_rules }}'
        - '{{ nginx_ferm_dependent_rules }}'
        - '{{ postgresql_server_ferm_dependent_rules }}'

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.ferm etckeeper commit'

    - role: debops.postgresql_server
      tags: [ 'role::postgresql_server' ]
      postgresql_server_upstream: true

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.postgresql_server etckeeper commit'

    - role: debops.postgresql
      tags: [ 'role::postgresql' ]
      postgresql_roles:
        - name: '{{ owncloud_database_name }}' # Separate role is needed when owncloud_database_name != owncloud_database_user
        - name: '{{ owncloud_database_user }}' # Password is not passed directly - it will be read for the file
      postgresql_groups:
        - roles: [ '{{ owncloud_database_user }}' ]
          groups: [ '{{ owncloud_database_name }}' ]
          database: '{{ owncloud_database_name }}'
          enabled: '{{ owncloud_database_name != owncloud_database_user }}'
      postgresql_databases:
        - name: '{{ owncloud_database_name }}'
          owner: '{{ owncloud_database_user }}'
      when: (owncloud_database == 'postgresql')

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.postgresql etckeeper commit'

    - role: debops.php5
      tags: [ 'role::php5' ]
      php5_pools:
        - '{{ owncloud_php5_pool }}'

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.php5 etckeeper commit'

    - role: debops.nginx
      tags: [ 'role::nginx' ]
      nginx_servers:
        - '{{ owncloud_nginx_server }}'
      nginx_upstreams:
        - '{{ owncloud_nginx_upstream_php5 }}'

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.nginx etckeeper commit'

    - role: debops.owncloud
      tags: [ 'role::owncloud' ]

    - role: etckeeper-commit
      etckeeper_commit_message: 'Post debops.owncloud etckeeper commit'

  tasks:
    - name: Install /vagrant/git/etc directory
      tags: etckeeper
      become: true
      file:
        state: directory
        dest: '/vagrant/git/etc'
      when: etckeeper_enabled | bool

    - name: Init git /vagrant/git/etc
      become: true
      command: git init
      args:
        chdir: '/vagrant/git/etc'
        creates: '/vagrant/git/etc/.git'
      ignore_errors: true
      when: etckeeper_enabled | bool

    - name: Git import from /etc to /vagrant/git/etc
      become: true
      shell: "git fetch /etc && git reset --hard FETCH_HEAD"
      args:
        chdir: '/vagrant/git/etc'
      ignore_errors: true
      when: etckeeper_enabled | bool
